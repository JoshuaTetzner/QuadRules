using SpecialPolynomials
using FastGaussQuadrature

function logfct(n, x)
    if iseven(n)
        return basis.(SpecialPolynomials.Chebyshev, Int(n/2))(x)
    else
        return basis.(SpecialPolynomials.Chebyshev, Int(floor(n/2)))(x)*log(x+1) 
    end
end

function chebyshevpolynomials(n, x)
    return basis.(SpecialPolynomials.Chebyshev, n)(x)
end

##

# example rectangel generalized cubature degree 4
N1 = 12
order1 = 2*N1-1 
sysa = nestedsystem(order1, 50, 50, logfct)
sysa = gramschmidt(sysa)
N2 = 6
order2 = 2*N2-1 
sysb = nestedsystem(order2, 2, 30, chebyshevpolynomials)
sysb = gramschmidt(sysb)

x12 = [
    big"-0.9995094314700455559019644632144633387892760602393608481503615229718168517707964",
    big"-0.9928126039595726182168135470049499136526177967004471619926437488610007724921633",
    big"-0.9657541480968077154537423327930925485207160197245558255125817040429853515669244",
    big"-0.8995887753536236167175429921599299653718587707139169310956340751948623993963792",
    big"-0.7769528288852748768171894774581415474793175869871243892616819197753627857785672",
    big"-0.5879939941897520545702663529389631890281448035402071027978870276161056264896584",
    big"-0.3350746049727869260381723539106108123147558461271877276214296851751234537919556",
    big"-0.0347865980681361203221652873300027644606314343014101738160923363442419880881151",
    big"0.283358940247985713898417182880598563251357705432513920576920384894981079425395",
    big"0.5814181743667108112135052467521583122922054313296465519520211677360980380742041",
    big"0.8197676575311251831139349491523929887465970664033995663609543824564324619879571",
    big"0.9646958754315239018194884480942846074628490123245465930621071320146463950863502"
]
xa = Float64.(x12)
w12 = [
    big"0.001866399766134284848876044235325722330194747751500448620342469782750921526740186",
    big"0.01395499183028743065349224371609582798009528245625068033591033019112585711011897",
    big"0.04338937804399706638052163984186910066350767372902353341284043029797486106581572",
    big"0.09194138879118224792790179119757057960214316975487497990148230528585525189354041",
    big"0.155054077391663568181350853462084956130643534561049324176711311815430454608176",
    big"0.2225050363674792133548450594642591776484348348173870156565767021887255951959323",
    big"0.2805462120171666669282073317561505632429703012899052448773248423696704923716088",
    big"0.3150342601736592562327747690823637897846633742077547875469955489037859144728496",
    big"0.3148166844472979534536281704515799159078868985038838894910253595002114139191718",
    big"0.2745676654355717187080751599203070321140524086716670115099896121342901887539398",
    big"0.196393390948379002552552955405922734795545575667955104485720671366952922049084",
    big"0.08993051478718159077777398146647059979986219858874797998508041616322612703241351"
]
wa = Float64.(w12)
#xa = Float64.(logquadx[N1-2].*2 .- 1)
#wa = Float64.(logquadw[N1-2].*2)
xb, wb = gausslegendre(N2) 

x, w = nonsymmetricquad3(sysa, sysb, xa, xb, wa, wb, order1-2, order2-1)
print("Degree p = 10")
println(Float64.(x))
println(Float64.(w))
x, w = nonsymmetricquad3(sysa, sysb, xa, xb, wa, wb, order1, order2)
print("Degree p = 11")
println(Float64.(x))
println(Float64.(w))

##

# reconsruction of rectangel generalized cubature rules
# significance index has to be adjusted in generalizednodeelimination2
for N = 2:5
    N1 = 2*N
    order1 = 2*N1-1 
    @time sysa = nestedsystem(order1, 50, 50, logfct)
    sysa = gramschmidt(sysa)
    N2 = N
    order2 = 2*N2-1 
    @time sysb = nestedsystem(order2, 2, 30, chebyshevpolynomials)
    sysb = gramschmidt(sysb)

    xa = Float64.(logquadx[N1-2].*2 .- 1)
    wa = Float64.(logquadw[N1-2].*2)
    xb, wb = gausslegendre(N2) 

    x, w = nonsymmetricquad3(sysa, sysb, xa, xb, wa, wb, order1-2, order2-1)
    print("Degree p = ")
    print(2*N-2)
    println(x)
    println(w)

    x, w = nonsymmetricquad3(sysa, sysb, xa, xb, wa, wb, order1, order2)
    print("Degree p = ")
    print(2*N-1)
    println(x)
    println(w)
end